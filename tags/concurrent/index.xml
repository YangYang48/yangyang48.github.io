<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concurrent on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/tags/concurrent/</link>
    <description>Recent content in Concurrent on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/tags/concurrent/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>并发编程2 CAS基本原理</title>
      <link>https://yangyang48.github.io/2021/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B2-cas%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B2-cas%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;CAS(compare and Swap)是由硬件实现的。CAS可以将read- modify - write这类的操作转换为原子操作。jdk1.5之后引入CAS利用CPU原语保证线程操作的原子性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>并发编程1 java并发基础知识</title>
      <link>https://yangyang48.github.io/2021/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B1-java%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/12/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B1-java%E5%B9%B6%E5%8F%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;这块java并发基础知识主要是更全面的认识线程，了解线程，包括线程启动的二种方式、线程的生命周期、破坏死锁的四种方式和ThreadLocal。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
