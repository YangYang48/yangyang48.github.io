<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binder on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/tags/binder/</link>
    <description>Recent content in Binder on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/tags/binder/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WMS-Window</title>
      <link>https://yangyang48.github.io/2023/04/wms-window/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/04/wms-window/</guid>
      <description>&lt;p&gt;Android framework层离不开AMS、WMS、PMS等，其中WMS中Window这个概念比较抽象，且很多博客作者写了很多关于Window的文章，我个人感觉还缺点什么，本文尽可能通过通俗易懂的方式来描述（android11和13源码）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>service call源码分析(以蓝牙打开关闭为例)</title>
      <link>https://yangyang48.github.io/2023/03/service-call%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%BB%A5%E8%93%9D%E7%89%99%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD%E4%B8%BA%E4%BE%8B/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/03/service-call%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%BB%A5%E8%93%9D%E7%89%99%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD%E4%B8%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;Android中如果需要通过adb指令调用系统服务中的方法，可以通过service call的形式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>am broadcast发送广播源码分析</title>
      <link>https://yangyang48.github.io/2022/12/am-broadcast%E5%8F%91%E9%80%81%E5%B9%BF%E6%92%AD%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/12/am-broadcast%E5%8F%91%E9%80%81%E5%B9%BF%E6%92%AD%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;Android中广播可以adb调试发送，am broadcast，本文主要分析这个广播源码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android智能指针解析</title>
      <link>https://yangyang48.github.io/2022/11/android%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/android%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;Android源码中有大量的智能指针，它们经常使用，通常一个类前会修饰sp或者wp，这种修饰即为智能指针。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HIDL介绍和使用</title>
      <link>https://yangyang48.github.io/2022/03/hidl%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/hidl%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;AIDL并不是唯一的Binder的应用，除了AIDL还有一个经常在HAL层代码中出现的HIDL。本文就是通过HIDL展开描述，主要对于AIDL的介绍和使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDL3 JAVA和C&#43;&#43;通信</title>
      <link>https://yangyang48.github.io/2022/03/aidl3-java%E5%92%8Cc-%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/aidl3-java%E5%92%8Cc-%E9%80%9A%E4%BF%A1/</guid>
      <description>&lt;p&gt;祝各位女神3.8快乐~最近在阅读Android源码的过程中再次遇到AIDL。和以往不同，这次是Java层和c++层的相互调用，跟以往App端的两个Java进程的IPC通信有区别。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDL2 源码分析</title>
      <link>https://yangyang48.github.io/2021/11/aidl2-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/11/aidl2-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;aidl一种android接口描述语言，本文主要是对.aidl文件自动生成的.java文件的具体源码进行分析，描述AIDL生成的java类细节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDL1 使用</title>
      <link>https://yangyang48.github.io/2021/08/aidl1-%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/08/aidl1-%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;第三方移动支付（银联/菜信等）使用微信/支付宝支付过程中，出现支付宝或者微信支付界面。
从一个APP到另一个APP调用的过程，就需要今天的主角AIDL来实现。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
