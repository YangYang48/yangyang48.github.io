<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2023 on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/categories/2023/</link>
    <description>Recent content in 2023 on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/categories/2023/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C语言隐式类型转换规则【记一次故障排除】</title>
      <link>https://yangyang48.github.io/2023/07/c%E8%AF%AD%E8%A8%80%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/07/c%E8%AF%AD%E8%A8%80%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4/</guid>
      <description>&lt;p&gt;隐式类型转换造成的危害程度与数组和指针有的一拼。如果你混合使用不同类型，C使用一个规则集合来自动完成类型转换。这可能很方便，但也很危险。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android rc文件和解析</title>
      <link>https://yangyang48.github.io/2023/06/android-rc%E6%96%87%E4%BB%B6%E5%92%8C%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/06/android-rc%E6%96%87%E4%BB%B6%E5%92%8C%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;Android进程对应的文件有后缀为rc文件的，那么rc文件是什么又是怎么加载启动的呢&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Native Looper使用和原理</title>
      <link>https://yangyang48.github.io/2023/06/native-looper%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/06/native-looper%E4%BD%BF%E7%94%A8%E5%92%8C%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;Android中大量的用到了消息机制，而最终消息机制都离不开native Looper。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WMS-Window</title>
      <link>https://yangyang48.github.io/2023/04/wms-window/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/04/wms-window/</guid>
      <description>&lt;p&gt;Android framework层离不开AMS、WMS、PMS等，其中WMS中Window这个概念比较抽象，且很多博客作者写了很多关于Window的文章，我个人感觉还缺点什么，本文尽可能通过通俗易懂的方式来描述（android11和13源码）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>service call源码分析(以蓝牙打开关闭为例)</title>
      <link>https://yangyang48.github.io/2023/03/service-call%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%BB%A5%E8%93%9D%E7%89%99%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD%E4%B8%BA%E4%BE%8B/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/03/service-call%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%BB%A5%E8%93%9D%E7%89%99%E6%89%93%E5%BC%80%E5%85%B3%E9%97%AD%E4%B8%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;Android中如果需要通过adb指令调用系统服务中的方法，可以通过service call的形式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Battery Historian简单搭建</title>
      <link>https://yangyang48.github.io/2023/02/battery-historian%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/battery-historian%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/</guid>
      <description>&lt;p&gt;Battery Historain是谷歌开发的Android耗电量分析工具，其开发语言为go语言。使用这个工具可以将bugreport内容通过可视化界面更加直观的展示出来。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iptables使用</title>
      <link>https://yangyang48.github.io/2023/02/iptables%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/iptables%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;Android应用网络限制功能实现，或者是网络白名单，限制儿童模式等等，通常会用到linux的iptables的操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android TextToSpeech浅析</title>
      <link>https://yangyang48.github.io/2023/02/android-texttospeech%E6%B5%85%E6%9E%90/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/android-texttospeech%E6%B5%85%E6%9E%90/</guid>
      <description>&lt;p&gt;今天就顺便来拆解一下用到的核心，TextToSpeech功能(即tts)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>不务正业系列 2博客中图形绘制的快速使用</title>
      <link>https://yangyang48.github.io/2023/02/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97-2%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97-2%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;目前看到好多博客都流行使用不规则的icon作为插图，具体是drawio的使用，起来看难度不高，安排！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43; typeof</title>
      <link>https://yangyang48.github.io/2023/02/c-typeof/</link>
      <pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/c-typeof/</guid>
      <description>&lt;p&gt;本文以最通俗易懂的方式熟悉c++ typeof。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux的TCP/IP协议栈发送过程</title>
      <link>https://yangyang48.github.io/2023/02/linux%E7%9A%84tcp/ip%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%8F%91%E9%80%81%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/linux%E7%9A%84tcp/ip%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%8F%91%E9%80%81%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;本文以最通俗易懂的方式结合源码分析Linux的TCP/IP协议栈发送过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一文带你了解SElinux那点事</title>
      <link>https://yangyang48.github.io/2023/01/%E4%B8%80%E6%96%87%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3selinux%E9%82%A3%E7%82%B9%E4%BA%8B/</link>
      <pubDate>Sat, 07 Jan 2023 05:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/01/%E4%B8%80%E6%96%87%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3selinux%E9%82%A3%E7%82%B9%E4%BA%8B/</guid>
      <description>&lt;p&gt;SELinux(Security Enhanced Linux)是一个Linux内核模块，也是一个安全子系统。用于最大限度地减小系统中服务进程可访问的资源（最小权限原则）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android NE（Native Exception）</title>
      <link>https://yangyang48.github.io/2023/01/android-nenative-exception/</link>
      <pubDate>Sat, 07 Jan 2023 04:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/01/android-nenative-exception/</guid>
      <description>&lt;p&gt;Android是基于Linux存在的，常常有使用c/c++代码库编写native进程或者动态库的情况，这些库在运行时发生的异常统称Native Exception。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>socket简单实现（Linux附Android源码）</title>
      <link>https://yangyang48.github.io/2023/01/socket%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0linux%E9%99%84android%E6%BA%90%E7%A0%81/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/01/socket%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0linux%E9%99%84android%E6%BA%90%E7%A0%81/</guid>
      <description>&lt;p&gt;在Linux中的socket用法，它是一种RPC的机制，通过通过客户端和服务端相连，产生socket句柄，通过句柄完成数据的传输通信。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
