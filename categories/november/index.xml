<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>November on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/categories/november/</link>
    <description>Recent content in November on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/categories/november/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设计模式之代理模式</title>
      <link>https://yangyang48.github.io/2021/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;比如你在澡堂洗完澡需要搓澡服务，你会联系大堂经理给你安排比较有名搓澡技师，这个时候大堂经理就会在预备的技师里面选一个给你服务。这种模式就是代理模式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDL2 源码分析</title>
      <link>https://yangyang48.github.io/2021/11/aidl2-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/11/aidl2-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;aidl一种android接口描述语言，本文主要是对.aidl文件自动生成的.java文件的具体源码进行分析，描述AIDL生成的java类细节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android注解</title>
      <link>https://yangyang48.github.io/2021/11/android%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/11/android%E6%B3%A8%E8%A7%A3/</guid>
      <description>&lt;p&gt;在代码中添加信息提供了一种形式化的方法，使我们可以在稍后某个时刻非常方便地使用这些数据。这就是注解，比如@Override，@Deprecated。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadLocal之初出茅庐</title>
      <link>https://yangyang48.github.io/2021/11/threadlocal%E4%B9%8B%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2021/11/threadlocal%E4%B9%8B%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</guid>
      <description>&lt;p&gt;我们使用ThreadLocal能够解决线程局部变量统一定义问题，多线程数据不能共享的问题，使得每一个线程单独维护自己线程内的变量值（set、get、remove）。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
