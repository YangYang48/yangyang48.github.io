<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2022 on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/categories/2022/</link>
    <description>Recent content in 2022 on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/categories/2022/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>操作系统学习笔记 13文件系统</title>
      <link>https://yangyang48.github.io/2022/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-13%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-13%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第十二篇章，开始学习第十三篇章，关于操作系统的文件系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 12进程间通信</title>
      <link>https://yangyang48.github.io/2022/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-12%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-12%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第十一篇章，开始学习第十二篇章，关于操作系统的进程间通信。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 11死锁</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-11%E6%AD%BB%E9%94%81/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-11%E6%AD%BB%E9%94%81/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第十篇章，开始学习第十一篇章，关于操作系统的死锁。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 10信号量&amp;管程</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-10%E4%BF%A1%E5%8F%B7%E9%87%8F%E7%AE%A1%E7%A8%8B/</link>
      <pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-10%E4%BF%A1%E5%8F%B7%E9%87%8F%E7%AE%A1%E7%A8%8B/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第九篇章，开始学习第十篇章，关于操作系统的信号量&amp;amp;管程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ioctl通信方式之初出茅庐</title>
      <link>https://yangyang48.github.io/2022/07/ioctl%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F%E4%B9%8B%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</link>
      <pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/ioctl%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F%E4%B9%8B%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</guid>
      <description>&lt;p&gt;我们通常用ioctl函数直接访问到内核，在内核执行操作，执行读写操作。那么这个函数指令的原理是什么，本文就展开介绍和使用一下ioctl。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 9同步&amp;互斥</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-9%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/</link>
      <pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-9%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第八篇章，开始学习第九篇章，关于操作系统的同步&amp;amp;互斥。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 8CPU调度</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-8cpu%E8%B0%83%E5%BA%A6/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-8cpu%E8%B0%83%E5%BA%A6/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第七篇章，开始学习第八篇章，关于操作系统的CPU调度。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Typora使用过期解决方案</title>
      <link>https://yangyang48.github.io/2022/07/typora%E4%BD%BF%E7%94%A8%E8%BF%87%E6%9C%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/typora%E4%BD%BF%E7%94%A8%E8%BF%87%E6%9C%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;Typora使用过期解决方案。基于This beta version of Typora is expired, please download and install a newer version.的解决方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 7进程管理</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-7%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-7%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第六篇章，开始学习第七篇章，关于操作系统的进程管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 6页面置换算法</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-6%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-6%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第五篇章，开始学习第六篇章，关于操作系统的页面置换算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 5虚拟内存</title>
      <link>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-5%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-5%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第四篇章，开始学习第五篇章，关于操作系统的虚拟内存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 4非连续内存分配</title>
      <link>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4%E9%9D%9E%E8%BF%9E%E7%BB%AD%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-4%E9%9D%9E%E8%BF%9E%E7%BB%AD%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第三篇章，开始学习第四篇章，关于操作系统的非连续内存分配。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 3内存管理</title>
      <link>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-3%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第二篇章，开始学习第三篇章，关于操作系统的内存管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 2操作系统介绍</title>
      <link>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;熟悉完操作系统的第一篇章，开始学习第二篇章，关于操作系统的介绍。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>操作系统学习笔记 1概述</title>
      <link>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/06/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1%E6%A6%82%E8%BF%B0/</guid>
      <description>&lt;p&gt;感觉在学习Android系统的过程中，越来越发现自己的计算机相关基础比较薄弱。新开一个篇章记录学习操作系统，纸上得来终觉浅，还是需要不断学习。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>socket简单实现（Java版和Linux版）</title>
      <link>https://yangyang48.github.io/2022/06/socket%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0java%E7%89%88%E5%92%8Clinux%E7%89%88/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/06/socket%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0java%E7%89%88%E5%92%8Clinux%E7%89%88/</guid>
      <description>&lt;p&gt;Android中除了Binder之外，还有其他的跨进程通信。socket就是其中之一，多用于进程的启动还有日志等模块中的通信，是Android系统不可缺少的一部分。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vsync信号机制浅析</title>
      <link>https://yangyang48.github.io/2022/05/vsync%E4%BF%A1%E5%8F%B7%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/05/vsync%E4%BF%A1%E5%8F%B7%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/</guid>
      <description>&lt;p&gt;在前面的学习中，了解到了实际上是存在硬件的Vsync信号和软件的Vsync信号，那么这两个信号是怎么工作的呢&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>初识choreographer</title>
      <link>https://yangyang48.github.io/2022/05/%E5%88%9D%E8%AF%86choreographer/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/05/%E5%88%9D%E8%AF%86choreographer/</guid>
      <description>&lt;p&gt;屏幕的刷新率一般为60fps，当然最新的手机刷新率更高，这一切都是surfacelinger的安排，通过一个叫Choreographer来监控和保证应用的帧率为固定的1/60s。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dumpsys简介 以media.camera为例</title>
      <link>https://yangyang48.github.io/2022/04/dumpsys%E7%AE%80%E4%BB%8B-%E4%BB%A5media.camera%E4%B8%BA%E4%BE%8B/</link>
      <pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/04/dumpsys%E7%AE%80%E4%BB%8B-%E4%BB%A5media.camera%E4%B8%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;dumpsys是一种在Android设备上运行的工具，可提供有关系统服务的信息。在相机开发的过程中，关于一些相机的配置可以直接dumpsyss media.camera来查看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadLocal之子父线程的恩爱情仇</title>
      <link>https://yangyang48.github.io/2022/04/threadlocal%E4%B9%8B%E5%AD%90%E7%88%B6%E7%BA%BF%E7%A8%8B%E7%9A%84%E6%81%A9%E7%88%B1%E6%83%85%E4%BB%87/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/04/threadlocal%E4%B9%8B%E5%AD%90%E7%88%B6%E7%BA%BF%E7%A8%8B%E7%9A%84%E6%81%A9%E7%88%B1%E6%83%85%E4%BB%87/</guid>
      <description>&lt;p&gt;我们知道Thread中会维护两个ThreadLocalMap，这个时候如果同时存在子父线程，子线程该如何获取父线程ThreadLocal的值&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux2 权限和管理</title>
      <link>https://yangyang48.github.io/2022/04/linux2-%E6%9D%83%E9%99%90%E5%92%8C%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/04/linux2-%E6%9D%83%E9%99%90%E5%92%8C%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;Linux中万物皆可文件，但是文件的管理，用户的管理，文件的权限，用户的权限如果没有搞清楚的话，那么就不是一名合格的程序员了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux3 Vim和shell脚本</title>
      <link>https://yangyang48.github.io/2022/04/linux3-vim%E5%92%8Cshell%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/04/linux3-vim%E5%92%8Cshell%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;p&gt;在Linux文本编辑器的江湖中一直有一个神器Vim，这个神奇可以满足日常编辑的所有需求。通过Vim可以进一步的学习关于Shell的脚本，提升操作Linux效率。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HIDL介绍和使用</title>
      <link>https://yangyang48.github.io/2022/03/hidl%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/hidl%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;AIDL并不是唯一的Binder的应用，除了AIDL还有一个经常在HAL层代码中出现的HIDL。本文就是通过HIDL展开描述，主要对于AIDL的介绍和使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux1 基础学习</title>
      <link>https://yangyang48.github.io/2022/03/linux1-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/linux1-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;p&gt;Linux是一个操作系统。它有正则表达式、网络协议、系统管理、版本控制、运维、交叉编译，烧录等等功能。所以一名Android开发人员熟练掌握Linux是基本功。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDL3 JAVA和C&#43;&#43;通信</title>
      <link>https://yangyang48.github.io/2022/03/aidl3-java%E5%92%8Cc-%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/aidl3-java%E5%92%8Cc-%E9%80%9A%E4%BF%A1/</guid>
      <description>&lt;p&gt;祝各位女神3.8快乐~最近在阅读Android源码的过程中再次遇到AIDL。和以往不同，这次是Java层和c++层的相互调用，跟以往App端的两个Java进程的IPC通信有区别。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux4 NDK交叉编译</title>
      <link>https://yangyang48.github.io/2022/03/linux4-ndk%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/03/linux4-ndk%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid>
      <description>&lt;p&gt;在当前编译平台下，编译出来的程序能运行在另一种目标平台上，但是编译平台本身却不能运行该程序。而我们在linux服务器编译的库可以直接在Android工程中编译。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ByteBuffer使用</title>
      <link>https://yangyang48.github.io/2022/02/bytebuffer%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/02/bytebuffer%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;ByteBuffer，一个字节缓冲区。我们通常通过这类缓冲区(Buffer)在内存中预留指定大小的存储空间用来对输入/输出(I/O)的数据作临时存储。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Parcel1 Parcel和Parcelable源码分析</title>
      <link>https://yangyang48.github.io/2022/02/parcel1-parcel%E5%92%8Cparcelable%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/02/parcel1-parcel%E5%92%8Cparcelable%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;Intent数据会作为Parcel被存储在Binder事务缓冲区中的对象进行传输。Parcel作为Android底层IPC通信的基础，熟悉Parcel作为了解Binder的第一步。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
