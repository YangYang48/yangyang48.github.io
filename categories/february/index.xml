<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>February on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/categories/february/</link>
    <description>Recent content in February on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/categories/february/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不务正业系列 2博客中图形绘制的快速使用</title>
      <link>https://yangyang48.github.io/2023/02/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97-2%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97-2%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%9B%BE%E5%BD%A2%E7%BB%98%E5%88%B6%E7%9A%84%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;目前看到好多博客都流行使用不规则的icon作为插图，具体是drawio的使用，起来看难度不高，安排！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>c&#43;&#43; typeof</title>
      <link>https://yangyang48.github.io/2023/02/c-typeof/</link>
      <pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/c-typeof/</guid>
      <description>&lt;p&gt;本文以最通俗易懂的方式熟悉c++ typeof。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux的TCP/IP协议栈发送过程</title>
      <link>https://yangyang48.github.io/2023/02/linux%E7%9A%84tcp/ip%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%8F%91%E9%80%81%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2023/02/linux%E7%9A%84tcp/ip%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%8F%91%E9%80%81%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;本文以最通俗易懂的方式结合源码分析Linux的TCP/IP协议栈发送过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ByteBuffer使用</title>
      <link>https://yangyang48.github.io/2022/02/bytebuffer%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/02/bytebuffer%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;ByteBuffer，一个字节缓冲区。我们通常通过这类缓冲区(Buffer)在内存中预留指定大小的存储空间用来对输入/输出(I/O)的数据作临时存储。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Parcel1 Parcel和Parcelable源码分析</title>
      <link>https://yangyang48.github.io/2022/02/parcel1-parcel%E5%92%8Cparcelable%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/02/parcel1-parcel%E5%92%8Cparcelable%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;Intent数据会作为Parcel被存储在Binder事务缓冲区中的对象进行传输。Parcel作为Android底层IPC通信的基础，熟悉Parcel作为了解Binder的第一步。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
