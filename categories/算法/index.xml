<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 欢迎来到我的博客~</title>
    <link>https://yangyang48.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 欢迎来到我的博客~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Nov 2022 13:00:00 +0000</lastBuildDate><atom:link href="https://yangyang48.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>广度优先搜索</title>
      <link>https://yangyang48.github.io/2022/11/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Sun, 06 Nov 2022 13:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</guid>
      <description>&lt;p&gt;学习广度优先搜索(BFS)方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>深度优先搜索</title>
      <link>https://yangyang48.github.io/2022/11/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Sun, 06 Nov 2022 12:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/</guid>
      <description>&lt;p&gt;学习深度优先搜索(DFS)方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>子数组最大平均数</title>
      <link>https://yangyang48.github.io/2022/11/%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0/</link>
      <pubDate>Sun, 06 Nov 2022 11:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0/</guid>
      <description>&lt;p&gt;子数组最大平均数。采用&lt;strong&gt;滑动窗口&lt;/strong&gt;方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>三个数的最大乘积</title>
      <link>https://yangyang48.github.io/2022/11/%E4%B8%89%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</link>
      <pubDate>Sun, 06 Nov 2022 10:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E4%B8%89%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</guid>
      <description>&lt;p&gt;三个数的最大乘积。采用线性扫描方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>求斐波那契数列第N位的值</title>
      <link>https://yangyang48.github.io/2022/11/%E6%B1%82%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%AC%ACn%E4%BD%8D%E7%9A%84%E5%80%BC/</link>
      <pubDate>Sun, 06 Nov 2022 09:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E6%B1%82%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%AC%ACn%E4%BD%8D%E7%9A%84%E5%80%BC/</guid>
      <description>&lt;p&gt;求斐波那契数列第N位的值。采用双指针迭代方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>寻X的平方根</title>
      <link>https://yangyang48.github.io/2022/11/%E5%AF%BBx%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</link>
      <pubDate>Tue, 01 Nov 2022 08:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E5%AF%BBx%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</guid>
      <description>&lt;p&gt;X的平方根。采用二分查找或者牛顿迭代方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>寻找数组的中心下标</title>
      <link>https://yangyang48.github.io/2022/11/%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E4%B8%8B%E6%A0%87/</link>
      <pubDate>Tue, 01 Nov 2022 07:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E4%B8%8B%E6%A0%87/</guid>
      <description>&lt;p&gt;寻找数组的中心下标。采用双指针。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>统计素数个数</title>
      <link>https://yangyang48.github.io/2022/11/%E7%BB%9F%E8%AE%A1%E7%B4%A0%E6%95%B0%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Tue, 01 Nov 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/11/%E7%BB%9F%E8%AE%A1%E7%B4%A0%E6%95%B0%E4%B8%AA%E6%95%B0/</guid>
      <description>&lt;p&gt;统计素数个数。采用埃氏筛选。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 470用 Rand7() 实现 Rand10()</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-470%E7%94%A8-rand7-%E5%AE%9E%E7%8E%B0-rand10/</link>
      <pubDate>Sun, 30 Oct 2022 10:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-470%E7%94%A8-rand7-%E5%AE%9E%E7%8E%B0-rand10/</guid>
      <description>&lt;p&gt;leetcode第470题，用 Rand7() 实现 Rand10()。采用拒绝采样来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 121买卖股票的最佳时机</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-121%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Sun, 30 Oct 2022 08:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-121%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid>
      <description>&lt;p&gt;leetcode第121题，买卖股票的最佳时机。采用动态规划或者类似双指针来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 53最大子数组和</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-53%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</link>
      <pubDate>Sun, 30 Oct 2022 07:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-53%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</guid>
      <description>&lt;p&gt;leetcode第53题，最大子数组和。采用动态规划来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 509斐波那契数</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-509%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/</link>
      <pubDate>Sun, 30 Oct 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-509%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0/</guid>
      <description>&lt;p&gt;leetcode第509题，斐波那契数。一般可以直接使用循环或者递归的方式(类似一维DP数组)，这里采用动态规划来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>动态规划</title>
      <link>https://yangyang48.github.io/2022/10/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Sun, 30 Oct 2022 05:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>&lt;p&gt;数据结构中的动态规划，一起学习一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串匹配 BF(Brute Force)</title>
      <link>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-bfbrute-force/</link>
      <pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-bfbrute-force/</guid>
      <description>&lt;p&gt;经典的字符串匹配算法，BF(Brute Force)算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串匹配 BM(Boyer-Moore)</title>
      <link>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-bmboyer-moore/</link>
      <pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-bmboyer-moore/</guid>
      <description>&lt;p&gt;经典的字符串匹配算法，BM(Boyer-Moore)算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串匹配 KMP(Knuth-Morris-Pratt)</title>
      <link>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-kmpknuth-morris-pratt/</link>
      <pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D-kmpknuth-morris-pratt/</guid>
      <description>&lt;p&gt;经典的字符串匹配算法，KMP(Knuth-Morris-Pratt)算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 415字符串相加</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-415%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0/</link>
      <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-415%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0/</guid>
      <description>&lt;p&gt;leetcode第415题，字符串相加。采用字符串处理方式来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 20有效的括号</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid>
      <description>&lt;p&gt;leetcode第20题，有效的括号。采用栈来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 461汉明距离</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-461%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-461%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/</guid>
      <description>&lt;p&gt;leetcode第461题，汉明距离。采用位运算来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 338比特位计数</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-338%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-338%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0/</guid>
      <description>&lt;p&gt;leetcode第338题，比特位计数。采用位运算或者奇偶性来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 136只出现一次的数字</title>
      <link>https://yangyang48.github.io/2022/10/leetcode-136%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/leetcode-136%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>&lt;p&gt;leetcode第136题，只出现一次的数字。采用位运算来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 10基数排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-10%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-10%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，基数排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 9桶排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-9%E6%A1%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-9%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，桶排序，用到了桶的概念&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 8计数排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-8%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-8%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，计数排序，用到了桶的概念&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 7堆排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-7%E5%A0%86%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-7%E5%A0%86%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，堆排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 6归并排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-6%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-6%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，归并排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 5希尔排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-5%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-5%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，希尔排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 4快速排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-4%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-4%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，快速排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 3插入排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-3%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-3%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，插入排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 2选择排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-2%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-2%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，选择排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序 1冒泡排序</title>
      <link>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-1%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/10/%E6%8E%92%E5%BA%8F-1%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;p&gt;经典的排序算法，冒泡排序&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 101对称二叉树</title>
      <link>https://yangyang48.github.io/2022/09/leetcode-101%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/09/leetcode-101%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>&lt;p&gt;leetcode第101题，对称二叉树。采用数组递归或者循环算法(数据结构采用队列)来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode Hot100二叉树的前中后序遍历</title>
      <link>https://yangyang48.github.io/2022/09/leetcode-hot100%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/09/leetcode-hot100%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/</guid>
      <description>&lt;p&gt;leetcode第101题，对称二叉树。采用数组递归或者循环算法(数据结构采用栈)来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 1984学生分数的最小差值</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-1984%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-1984%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC/</guid>
      <description>&lt;p&gt;leetcode第1984题，学生分数的最小差值。采用排序+滑动窗口的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 232用栈实现队列</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-232%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</link>
      <pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-232%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</guid>
      <description>&lt;p&gt;leetcode第232题，用栈实现队列。采用栈的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 394字符串解码</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-394%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</link>
      <pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-394%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;leetcode第394题，字符串解码。采用栈的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode之剑指Offer 22链表中倒数第k个节点</title>
      <link>https://yangyang48.github.io/2022/08/leetcode%E4%B9%8B%E5%89%91%E6%8C%87offer-22%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode%E4%B9%8B%E5%89%91%E6%8C%87offer-22%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9/</guid>
      <description>&lt;p&gt;leetcode之剑指Offer22题，链表中倒数第k个节点。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 876链表的中间结点</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-876%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9/</link>
      <pubDate>Wed, 17 Aug 2022 08:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-876%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9/</guid>
      <description>&lt;p&gt;leetcode第876题，链表的中间结点。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 234回文链表</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-234%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Wed, 17 Aug 2022 07:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-234%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;leetcode第234题，回文链表。采用双指针+迭代的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 206反转链表</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-206%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Wed, 17 Aug 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-206%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;leetcode第206题，反转链表。采用迭代的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 160相交链表</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-160%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Tue, 16 Aug 2022 10:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-160%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;leetcode第160题，相交链表。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 142环形链表 II</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-142%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-ii/</link>
      <pubDate>Tue, 16 Aug 2022 09:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-142%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-ii/</guid>
      <description>&lt;p&gt;leetcode第142题，环形链表2。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 141环形链表</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-141%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Tue, 16 Aug 2022 08:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-141%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;leetcode第141题，环形链表。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 83删除排序链表中的重复元素</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-83%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</link>
      <pubDate>Tue, 16 Aug 2022 07:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-83%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</guid>
      <description>&lt;p&gt;leetcode第83题，删除排序链表中的重复元素。采用指针指向越过下一个结点的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 21合并两个有序链表</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-21%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Tue, 16 Aug 2022 06:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-21%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;leetcode第21题，合并两个有序链表。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 448找到所有数组中消失的数字</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-448%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Mon, 15 Aug 2022 10:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-448%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>&lt;p&gt;leetcode第448题，找到所有数组中消失的数字。采用数组元素改变(加或者减)的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 283移动零</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-283%E7%A7%BB%E5%8A%A8%E9%9B%B6/</link>
      <pubDate>Mon, 15 Aug 2022 09:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-283%E7%A7%BB%E5%8A%A8%E9%9B%B6/</guid>
      <description>&lt;p&gt;leetcode第283题，移动零。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leetcode 88合并两个有序数组</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-88%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link>
      <pubDate>Mon, 15 Aug 2022 08:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-88%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid>
      <description>&lt;p&gt;leetcode第88题，合并两个有序数组。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LeetCode 1两数之和</title>
      <link>https://yangyang48.github.io/2022/08/leetcode-1%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yangyang48.github.io/2022/08/leetcode-1%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>&lt;p&gt;leetcode第1题，两数之和。采用双指针的算法来完成。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
